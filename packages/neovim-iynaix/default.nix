{
  pkgs,
  lib,
  dots ? null,
  ...
}:
{
  # nvf options can be found at:
  # https://notashelf.github.io/nvf/options.html
  imports = [
    ./keymaps.nix
  ];

  vim = {
    viAlias = true;
    vimAlias = true;

    theme = {
      enable = true;
      transparent = true;

      # name = "catppuccin";
      # style = "mocha";
    };

    extraPlugins = with pkgs.vimPlugins; {
      kanagawa = {
        package = kanagawa-nvim;
        setup = # lua
          ''
            require("kanagawa").setup({
                transparent = true,
                theme = "dragon",
                colors = {
                    theme = {
                        all = {
                            ui = {
                                bg_gutter = "none"
                            },
                        },
                    },
                },
                overrides = function(colors)
                    local theme = colors.theme
                    return {
                        NormalFloat = { bg = "none" },
                        FloatBorder = { bg = "none" },
                        FloatTitle = { bg = "none" },

                        -- Save an hlgroup with dark background and dimmed foreground
                        -- so that you can use it where your still want darker windows.
                        -- E.g.: autocmd TermOpen * setlocal winhighlight=Normal:NormalDark
                        NormalDark = { fg = theme.ui.fg_dim, bg = theme.ui.bg_m3 },

                        -- Popular plugins that open floats will link to NormalFloat by default;
                        -- set their background accordingly if you wish to keep them dark and borderless
                        LazyNormal = { bg = theme.ui.bg_m3, fg = theme.ui.fg_dim },
                        MasonNormal = { bg = theme.ui.bg_m3, fg = theme.ui.fg_dim },

                        -- Telescope
                        TelescopeTitle = { fg = theme.ui.special, bold = true },
                        TelescopePromptNormal = { bg = "none"--[[ theme.ui.bg_p1 ]] },
                        TelescopePromptBorder = { fg = theme.ui.bg_m3, bg = "none"--[[ theme.ui.bg_p1 ]] },
                        TelescopeResultsNormal = { fg = theme.ui.fg_dim, bg = "none"--[[ theme.ui.bg_m1 ]] },
                        TelescopeResultsBorder = { fg = theme.ui.bg_m3, bg = "none"--[[ theme.ui.bg_m1 ]] },
                        TelescopePreviewNormal = { bg = "none"--[[ theme.ui.bg_dim  ]]},
                        TelescopePreviewBorder = { bg = "none"--[[ theme.ui.bg_dim ]], fg = theme.ui.bg_dim },

                        -- Popup menu
                        Pmenu = { fg = theme.ui.shade0, bg = theme.ui.bg_p1, --[[  blend = vim.o.pumblend ]] },  -- add `blend = vim.o.pumblend` to enable transparency
                        PmenuSel = { fg = "NONE", bg = theme.ui.bg_p2 },
                        PmenuSbar = { bg = theme.ui.bg_m1 },
                        PmenuThumb = { bg = theme.ui.bg_p2 },
                    }
                end,
            })
            vim.cmd("colorscheme kanagawa-dragon")
          '';
      };
      direnv = {
        package = direnv-vim;
      };
      oil = {
        package = oil-nvim;
        setup = # lua
          ''
            require('oil').setup({
                    keymaps = {
                      ["h"] = "actions.parent",
                      ["l"] = "actions.select",
                    },
                  })
          '';
      };
      rooter = {
        package = vim-rooter;
      };
      vim-tmux-navigator = {
        package = vim-tmux-navigator;
      };
    };

    options = {
      cursorline = true;
      gdefault = true;
      magic = true;
      matchtime = 2; # briefly jump to a matching bracket for 0.2s
      exrc = true; # use project specific vimrc
      smartindent = true;
      virtualedit = "block"; # allow cursor to move anywhere in visual block mode
      # Use 4 spaces for <Tab> and :retab
      tabstop = 4;
      softtabstop = 4;
      shiftwidth = 4;
      expandtab = true;
      shiftround = true; # round indent to multiple of 'shiftwidth' for > and < command
    };

    # misc meta settings
    lineNumberMode = "relNumber";
    preventJunkFiles = true;
    searchCase = "smart";
    useSystemClipboard = true;

    spellcheck = {
      enable = true;
      programmingWordlist.enable = true;
    };

    # autocmds
    luaConfigPost = # lua
      ''
        -- use default colorscheme in tty
        -- https://github.com/catppuccin/nvim/issues/588#issuecomment-2272877967
        vim.g.has_ui = #vim.api.nvim_list_uis() > 0
        vim.g.has_gui = vim.g.has_ui and (vim.env.DISPLAY ~= nil or vim.env.WAYLAND_DISPLAY ~= nil)

        if not vim.g.has_gui then
          if vim.g.has_ui then
            vim.o.termguicolors = false
            vim.cmd.colorscheme('default')
          end
          return
        end

        -- remove trailing whitespace on save
        vim.api.nvim_create_autocmd("BufWritePre", {
          pattern = "*",
          command = "silent! %s/\\s\\+$//e",
        })

        -- save on focus lost
        vim.api.nvim_create_autocmd("FocusLost", {
          pattern = "*",
          command = "silent! wa",
        })

        -- absolute line numbers in insert mode, relative otherwise
        vim.api.nvim_create_autocmd("InsertEnter", {
          pattern = "*",
          command = "set number norelativenumber",
        })
        vim.api.nvim_create_autocmd("InsertLeave", {
          pattern = "*",
          command = "set number relativenumber",
        })
      '';

    dashboard = {
      startify = {
        enable = true;
        changeToVCRoot = true;
        customHeader = [
          # Sleep
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⢀⣶⣶⣶⣶⡿⠷⠖⠒⠁⠀⠀⠀⠀⠀⠀⣿⠀⠀⠉⠛⢿⣄⠀⠀⠀⠀⠀⠀⢸⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⣷⣿⣿⣵⡀⢾⣿⣶⣿⣶⣶⣶⡢⠑⢄⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⠿⠛⣉⣤⣴⣒⣮⠽⣭⣯⣥⣉⣌⣉⡅⢻⡇⠀⠀⠀⠀⠙⢦⡀⡠⠤⢄⡀⠸⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⢰⣿⣿⣿⣿⣧⠘⣿⣿⣿⣿⣿⣿⣟⣄⡀⠀⡀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡡⣴⣽⣾⡻⠮⠛⠋⠉⠉⠀⠀⠀⠀⠀⠀⠘⠿⠄⠀⠀⢀⣀⠈⣷⣌⠿⣷⣾⣄⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢀⣿⣿⣿⣿⣿⣿⠀⢻⣿⣿⣿⣿⣿⣿⣷⣅⠀⠈⠄⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢔⣥⣞⠟⢊⣡⣤⣶⣶⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⠶⠶⠒⠦⠤⠅⣈⡃⠀⠘⣽⣿⡀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣼⣿⣿⣿⣿⣿⣿⠀⠈⣿⣿⣿⣿⣿⣿⣏⡁⢀⠀⠀⢂⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢔⢵⠾⢋⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣶⣦⣤⣄⣉⠐⠘⣿⣧⠘⣿⣿⣿⣿⣿⣿⣿⣿⡟⢠⣿⣿⣿⣿⣿⣿⣿⠀⠀⢹⣿⣿⣿⣿⣟⣷⡿⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢣⡖⢁⣴⣿⣿⣿⣿⣿⣿⠿⠟⠛⠛⠉⠉⠉⠉⠉⠉⠉⠉⠙⠛⠻⠿⣏⣉⠉⠉⠙⠚⠳⢦⠘⣿⣇⠹⣿⣿⣿⣿⣿⣿⣿⠃⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠈⣿⣿⣿⣿⣿⡟⡗⠀⠀⠀⠀⠀"
          "       ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⢱⠋⣴⣿⣿⣿⣿⡿⠛⠉⠀⣀⣠⣴⣶⣿⡿⠛⠏⣀⣴⣿⣿⣶⣶⣦⠄⢀⣈⠙⠢⡀⢤⣄⡀⠀⠸⣿⡆⢻⣿⣿⣿⣿⣿⡏⢰⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⢿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀"
          "         ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢣⠇⣼⣿⣿⣿⡿⠋⠀⣠⣴⣾⣿⣿⣿⣿⡟⠀⡁⢾⣿⣿⣿⣿⣿⣿⡟⠀⢰⣿⣿⣶⣤⡀⢻⣿⣷⣦⠹⣿⡄⢻⣿⣿⣿⡿⠀⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⢸⣿⣿⣿⣿⡣⠀⠀⠀⠀⠀⠀"
          "        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡜⢠⣿⣿⣿⡏⢀⣴⣿⣿⣿⣿⣿⣿⣿⠟⡁⢮⡇⣸⣿⣿⣿⣿⣿⣿⢃⠀⢸⣿⣿⣿⣿⣿⣤⣿⣿⣿⣇⢻⣿⡄⠻⣿⡿⠁⢠⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠸⣷⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀"
          "         ⠀⠀⠀⠀⠀⠀⠀⠀⡜⡜⢿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢋⣴⣾⣧⣘⣴⣿⣿⣿⣿⣿⣿⣿⣸⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⢿⣷⡀⠈⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⢀⢿⣯⣿⣿⡖⠀⠀⠀⠀⠀⠀"
          "        ⠀⠀⠀⠀⠀⠀⠀⠀⡰⣽⡿⢤⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⣡⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣷⠘⣿⣷⡀⠀⠀⣸⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⢀⢼⣿⣿⡿⢈⠁⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣔⣽⠋⢠⣾⣿⣿⣿⣿⡟⣋⠉⠀⢶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢸⣿⡇⢻⣿⣇⠀⠀⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⢀⣴⣿⣿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⣪⡾⠁⣰⣿⠋⣽⣿⡟⢻⣿⣿⣷⡀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢏⣴⣾⣿⣿⠘⣿⣿⠀⢀⣿⣿⣿⣿⡿⠁⠀⠀⠀⠐⠛⠛⠛⢉⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⠟⢡⣾⡾⠁⣾⣿⣿⡇⠀⠹⣿⣿⣿⣦⡈⠻⣿⣿⣿⣿⣿⠛⢿⣿⣿⣿⣿⣿⣿⡟⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢻⠇⠀⢸⣿⠿⢋⣡⣤⠶⠶⠶⠾⠯⠿⢿⣻⣻⠷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⢀⣤⣲⣿⣿⠟⢁⢴⣿⡟⠀⢰⣿⣿⣿⣿⣆⠀⠈⠺⢟⢿⣾⣦⡙⢿⣿⣿⡇⣸⠘⣿⣿⣿⣿⣿⣿⡇⠁⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠛⣁⣈⣉⣥⣤⣤⣤⣤⣤⣤⣤⢤⢄⣀⣈⡉⠀⠒⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⡀⢔⣼⣷⡿⡿⠕⣁⢴⣿⡟⡝⠀⠀⢸⢹⣿⣿⣿⣿⣿⣢⣀⠀⠑⠻⢟⡿⣶⢌⠻⣇⢹⠀⣿⣿⣿⣿⣿⣿⣿⡀⠀⣿⣿⣿⣿⣿⣿⣿⠿⢋⣩⣥⣤⣖⣶⣶⣿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣒⣀⡀⠈⠁⠀⠀⠀⠀⠀⠀⠀"
          "⠀⢀⠔⢹⡘⠛⢟⠜⠊⢀⢌⢕⣻⢏⠎⠀⠀⠀⢸⢹⣿⣿⡿⣿⡿⢿⢷⡯⡒⡠⢄⣈⠑⠒⠁⠂⠀⠠⠿⣿⣿⣿⣿⣿⣿⣇⣀⣿⣿⣿⡿⠿⠛⡡⣺⣿⣿⣿⣿⣏⣁⣀⣀⣀⡀⣀⢀⢀⣀⣀⣀⣀⣀⣀⠠⢤⠤⠤⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠈⠐⠀⠡⠐⠁⠀⠀⠂⠠⠬⠉⠎⠀⠀⠀⠀⠀⠘⠉⠉⢐⠧⠱⠀⠢⡨⠩⠛⠆⠤⢋⡉⠒⠒⠀⠤⠄⠄⠀⣈⣉⣉⣉⣉⡉⠩⠄⠀⠀⠠⣪⣿⣿⣿⢿⣿⡿⠿⡷⣾⣾⣿⣿⠿⣿⣿⣿⣦⡤⠖⠻⠾⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠈⠂⠄⡀⠀⠀⠀⠀⠉⠉⠉⠀⠀⠀⠀⢈⡉⠀⠠⠀⡀⠌⠂⠔⠑⠋⠋⠉⠉⠛⠛⢫⠂⠫⠉⠟⠓⠋⠂⠋⠁⠉⠉⠁⢀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠄⠀⠀⠀⠀⠁⠀⠀⠤⠄⠐⠀⠀⠀⠀⠌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"

          # :3
          # "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢠⡇⠀⠀⠀⠀⠀⢀⠀⠀⠀⡄⡆"
          # "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢸⣧⠀⠀⢸⠀⠀⢸⠀⠀⠀⣿⡇"
          # "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣛⣫⣭⣭⣿⣭⣿⣯⣭⣽⣿⣿⣭⣽⣻⡿⣿⣿⣿⣿⣿⣿⡇⠀⢸⣿⠀⠀⢸⠀⠀⢸⠀⠀⢀⣿⡇"
          # "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣩⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣯⣿⢿⣿⣿⡇⠀⠿⣿⠀⠀⢸⡆⠀⢸⡆⠀⢸⣿⡇"
          # "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⣿⣿⡿⢋⣴⣿⣿⣿⡿⣛⣭⣶⣶⣾⣿⣿⣿⣿⣯⣴⣶⣶⣯⣝⠿⣿⣿⣿⣷⣝⠋⣀⣴⣖⣒⢤⡀⢼⠇⠀⢸⡇⠀⢸⣿⡇"
          # "⣿⣿⣿⣿⣿⣿⣿⣿⡿⢟⣡⣤⣭⣭⡓⢉⣴⣿⣿⣿⡟⣥⡾⢛⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣮⡻⢷⣮⡻⣿⣿⣿⣷⣝⠿⢿⣿⣿⣮⡀⠁⠀⢸⡇⠀⢸⣿⡇"
          # "⠛⠛⠛⠛⠛⠛⠛⢋⣴⣿⠟⣫⣭⠍⣱⣿⣿⣿⣿⢋⠞⣩⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡻⣷⣜⢿⣿⣿⣿⣮⢳⣮⡹⣿⣿⣆⠀⣸⡇⠀⢸⣿⣇"
          # "⠀⠀⠀⠀⠀⠀⢀⣾⡿⣱⣿⣿⢏⣾⣿⣿⣿⣿⠃⣣⣾⣿⣿⣿⣿⣿⣿⣿⢫⣿⠃⠸⣿⡝⣿⣿⣿⣿⣿⣿⣎⢿⣮⢻⣿⣿⣿⣷⡹⣿⣎⢿⣿⣇⢸⡇⠀⢸⣿⣿"
          # "⠀⠀⠀⠀⠀⠀⣼⡟⣼⣿⡿⢃⣾⣿⣿⣿⣿⢃⣼⣿⣿⣿⣿⣿⣿⣿⡿⢣⣿⢃⣴⣿⡜⣷⡹⣿⣿⣿⣿⣿⣿⣧⡻⣧⢻⣿⣿⣿⣷⡹⣿⡎⣿⣿⡀⠁⠀⢸⣿⠇"
          # "⠀⠀⠀⠀⠀⢰⣿⢱⣿⡿⠁⣾⣿⣿⣿⣿⢇⣾⣿⣿⣿⣿⣿⣿⣿⡟⣱⠟⣡⣾⣿⣿⣿⣎⢻⣜⢿⣿⣿⣿⣿⣿⣷⡹⡎⢿⣿⣿⣿⣷⢹⣿⡸⣿⣇⠀⠀⠸⠃⠀"
          # "⠀⠀⠀⠀⠀⣾⡇⣿⣿⠁⣸⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⠿⣛⡭⢩⠌⠁⣾⣿⣿⣿⣿⣿⣿⣷⠝⠪⡉⣭⡛⢿⣿⣿⣷⣹⢸⣿⣿⣿⣿⣇⢿⣧⢻⣿⠀⠀⠀⠀⣠"
          # "⠀⠀⠀⠀⢠⣿⢸⣿⠇⢠⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣧⣬⠉⢄⣥⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣤⣌⠹⢥⣽⣿⣿⣷⠘⣿⣿⣿⣿⣿⡼⣿⡸⣿⡆⠀⢀⣾⣿"
          # "⠀⠀⠀⠀⢸⡏⣺⡿⡘⣼⣿⣿⣿⣿⣿⢣⣿⣿⣿⡿⢟⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣝⡻⣿⣿⡆⣿⣿⣿⣿⣿⡇⣿⡇⣿⡇⢰⣿⣿⠃"
          # "⠀⠀⠀⠀⣼⡇⣿⡇⡇⣿⣿⣿⣿⣿⣿⢸⡿⢟⣫⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣯⡅⣿⣿⣿⣿⣿⣿⢸⣇⢻⣷⢸⣿⠃⠀"
          # "⠀⠀⠀⠀⣿⡇⡿⠹⢵⣿⣿⣿⣿⣿⢿⢴⣾⣿⣿⣟⣛⡭⠭⠽⠚⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠓⠒⠒⠯⠭⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⠼⠿⢹⣿⠘⠋⠀⠀"
          # "⣀⣠⣤⣤⣶⣶⣶⣿⢸⡏⢹⣿⣿⣿⢸⢸⣿⣿⠋⠀⠀⠀⠀⠀⠀⣨⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⠀⠀⠀⠀⠀⠀⢙⣿⣿⡇⣿⣿⣿⣿⡏⣿⣸⣿⣿⣶⣶⣤⣤⣉"
          # "⠛⠛⠉⠉⠍⠁⠠⠠⢸⣧⢸⣿⣿⣿⡜⡟⣿⣿⣷⣤⣤⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣦⣼⣿⣿⢽⡿⣿⣿⣿⢂⡇⠠⠂⠀⠈⠉⠙⠛⠻"
          # "⢀⣿⣦⡀⠀⠀⠀⠀⠘⡟⢎⣿⣿⣿⣧⢱⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣸⢇⣿⣿⡟⢸⢣⠀⠀⠀⠀⢀⢀⣴⠀"
          # "⠿⢿⣿⣿⣤⣌⣀⣀⣀⢧⢨⡜⣿⣿⣿⡆⠋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⡟⣼⣿⡿⠑⠘⢠⢂⢀⠀⠐⠠⣾⣿⣷"
          # "⠀⠀⢀⣯⣭⡛⢛⡿⠇⠈⠄⢸⣜⢿⣿⣿⢱⡜⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠘⢰⣿⡿⣡⡗⠀⠀⣤⣤⣶⠶⢟⠛⠉⠁"
          # "⠀⠀⢸⣿⢸⡇⣿⣿⡇⠀⠀⠀⠀⠀⠹⢿⣧⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⠿⣟⣻⠿⢟⣻⣿⣿⣿⣿⣿⣿⣿⣟⣴⢣⣿⠟⠀⠉⠀⢠⣤⣶⡆⣶⣿⣿⡄⠀⠀"
          # "⠀⠀⣸⣿⢸⡇⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠨⣍⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠣⡋⠁⠀⠀⠀⠀⠀⣿⣿⡇⣿⣿⣿⡇⠀⠀"
          # "⠀⠀⠈⠉⠘⠇⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢔⣴⡇⠀⠀⠀⠀⡇⠀⣿⣿⢑⣿⣿⣿⣇⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠈⠙⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣵⣿⣿⡇⠀⠀⠀⢰⠀⠀⣿⡿⢸⣿⣿⠻⠿⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⣶⣿⣿⣿⣿⡇⠀⠀⠀⣿⣄⣠⣿⠇⠼⠛⠉⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠒⠈⠙⠛⠿⠿⠿⠿⠟⠛⠋⠁⠰⠀⠀⣿⣿⣿⣿⣿⡇⠀⠀⣸⣿⡇⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⡇⠀⢰⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣶⡆⠀⠀⡶⠂⠀⠀⢀⣀⣀⣤⣴⣶⣶⣶⣶⣦⣤⢸⣿⣿⣿⠀⢀⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡇⠀⢰⡃⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠻⠿⠃⠀⠀⠷⠤⣀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢘⡛⠛⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"

          # RUST
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣬⣤⣄⣀⠀⠀⠀⠱⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣾⣿⣿⣿⣿⢉⡛⠻⢿⣿⣿⣶⣄⠀⠙⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⢛⢙⣿⣿⣿⣿⣿⣿⣿⣶⣌⡻⣿⣿⡑⡄⢈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠁⣡⣿⣿⢻⠀⡻⣿⡻⣿⣿⣿⣷⣌⢻⣿⣎⠂⠀⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⢀⣿⣿⡟⣸⢸⣿⣦⣝⠪⡙⠿⠿⠿⣦⠻⣿⣧⠀⠈⠇⠀⠄⢀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣾⣿⣿⠁⢃⣾⣿⣿⣿⣿⡆⠤⢈⠁⠛⠧⢻⣿⣧⠀⠀⠀⣤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⡿⢛⠁⢀⢺⣿⣿⣿⣿⣿⡟⣡⣶⠾⠾⢿⡎⢿⣿⡆⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡷⠀⠄⠒⠻⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⡆⢰⠉⢿⡇⠀⢋⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⡰⠛⠋⠙⠛⢿⣿⣿⣿⣿⣵⣄⡐⢀⣿⣿⡄⢸⠇⠀⣿⣷⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⡀⠀⠀⢼⡾⠋⠻⣿⠿⣿⣿⣿⣿⣿⣿⡁⠈⠀⠀⠸⣿⡆⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢲⣬⣦⣤⠊⠀⠀⠀⣻⣦⣼⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⢻⣷⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠈⣿⡄⢹⡀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠸⣧⠈⣧⢹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⣿⣿⣿⡿⠋⢰⠁⡀⣆⠀⠀⠀⠀⠀⢻⡄⣿⡎⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⢠⠋⢠⡇⣿⣧⡀⠀⠀⠀⠈⣿⣿⣿⢸⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣄⠐⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣷⡄⠀⠀⠀⠸⣿⣿⡇⡻⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⡄⠀⠀⠀⢻⣿⢿⢸⡜⢿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠒⠤⣀⠀⠈⠀⠻⣿⣦⡀⢰⣶⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⡄⠀⠀⠈⣿⡌⡇⣿⣆⠙⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⡄⢿⡆⠀⠀⠀⢿⡄⠀⠀⠀⠘⣿⣿⣿⡄⠀⠀⠙⣷⠸⢸⣿⣆⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⡎⠇⠀⠀⠀⠸⠛⠀⢀⣀⣤⣼⣿⣿⣧⠀⠀⠀⠸⡀⠈⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠿⠄⠀⣠⣤⣶⣶⣿⣿⡭⢿⣿⣿⣿⢿⣧⡀⠀⠀⠇⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⡠⠀⠹⣿⣿⣿⣿⣿⣖⣿⣿⣿⣿⣻⣿⣷⡀⠀⠀⠀⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢰⣾⣿⣿⣿⣿⣿⣿⣿⣧⢀⠂⢻⣿⣿⡩⢿⣿⣾⢛⣻⣿⣷⠿⢻⣿⡄⠀⠀⢻⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⡔⢶⣿⣿⡇⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠂⠂⢻⣿⣗⣿⣽⣿⣯⡽⢻⣿⣿⡿⢿⣿⣄⠀⠀⠀⠀⢠⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣴⣾⣿⡟⢻⣟⣿⣿⣛⣿⣧⣄⣴⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄⠀⢼⣿⣾⢛⣿⣿⣷⣋⣿⣿⣶⣯⣽⣿⣆⠀⠀⠀⣼⣿⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢷⡬⠶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡌⡈⡌⣿⣿⡥⣟⣻⣿⣿⢛⣿⣿⣿⣿⣿⣿⣦⠀⠀⠘⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡶⢾⣿⣯⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡰⡐⠘⣿⣿⣿⣿⣿⣿⣍⣷⣿⣿⡿⠿⠛⠋⠁⠀⢠⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡋⣿⣹⣯⡻⢶⡿⣶⠷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠡⠀⠹⣿⣿⣿⠿⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠈⢿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⢈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣮⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠇⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢢⠀⢀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⠰⣧⡁⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣴⣶⣿⣿⣿⣿⣿⣧⠹⣷⡀⠀⣼⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⢻⣿⣿⢛⡉⠭⢉⣿⣿⣿⣿⣿⠿⠟⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠹⣷⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⢸⣿⣷⣦⣶⡶⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠘⠇⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠈⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠙⠛⠛⠻⠿⢿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"

          # Handrest
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⡏⡜⣰⣿⣿⣿⣿⢃⣾⡟⣿⠏⣾⣿⣎⢿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣌⢻⣿⣿⡄⢿⣿⣆⢻⣿⣿⣿⣿⣿⣿⣿⣿⣧⠘⣿⣿⣿⣿⣿⡇⠀⠀⠸⠀⠱⣻⡜⡄⢊⢂⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⡿⠰⢰⣿⣿⣿⣿⢣⣾⡿⢱⡏⣼⣿⣿⣿⣦⠻⣆⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡹⣿⣿⡈⣿⣿⡌⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⢹⣿⣿⣿⡿⢀⠀⣿⠀⡇⠀⢹⢻⠚⡄⢂⠂⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⠃⢣⣿⣿⣿⣿⢡⣿⣿⢃⡟⣰⣿⣿⣿⣿⣿⣷⡝⢷⡝⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡜⢿⣧⢹⣿⣧⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⢿⣿⣿⠃⡎⢸⣼⠀⣷⠀⡄⢃⠀⠰⡀⠆⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⡟⠀⣼⣿⣿⣿⢃⣿⣿⠇⡞⣰⣿⣿⣿⣿⣿⣿⣿⣿⣦⡹⣦⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣎⢻⡀⣿⣿⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠘⡿⢃⡜⢠⣿⣿⠀⡿⡄⢱⠈⡆⠀⢁⠘⠀⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⡇⢠⣿⣿⣿⠇⣾⣿⠏⠜⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡙⢊⡉⢉⣛⠿⣿⣿⣿⣿⣿⣆⢣⢹⣿⣇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢡⡾⢡⣿⣿⣿⢀⡧⡇⢰⢃⠘⠀⠈⡄⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⢸⣿⣿⡏⣌⢵⡆⡔⣰⣝⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢫⣾⣦⣙⠦⡙⠗⣨⣿⣿⣿⣿⣿⣆⠈⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⡛⣿⣇⠘⣰⣿⣿⣿⡇⢸⣽⡇⢸⠘⡄⢁⠀⢀⠀⠀⠈⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⢼⣿⡿⢰⣿⡗⢌⣐⣛⡿⠎⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣭⣭⣭⣴⣶⣮⡑⢬⡛⢿⣿⣿⣿⣿⡄⢿⣿⡄⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⠀⣿⣿⣿⣿⠁⣼⣿⡇⢸⠀⢃⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣧⢸⣿⠇⣿⡟⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣷⣮⣐⠈⠛⠿⣿⡇⢸⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⠈⣿⡀⣿⣿⣿⡏⢰⣙⡻⠇⠸⠠⠄⠀⠂⠒⠂⢀⣀⣀⣀⡤⡤⡤⠐⡒⠄⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⠸⣿⢰⡟⣠⣿⢿⣿⡛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣣⣶⣶⣷⣶⣾⣭⣛⡿⣶⣤⣈⡉⢸⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⡆⢿⡇⡹⠛⣉⣠⣤⣤⣶⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⠷⠿⠟⠒⡉⢁⠄⢂⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣇⠛⠘⣴⣵⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⠇⣴⣿⣿⠿⠟⣛⣉⣭⣤⣤⣤⣤⣤⣄⢠⢤⠀⡖⣒⠞⢫⡔⡣⠂⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⢻⣿⣿⣿⠿⡄⢸⠟⠉⠉⠉⠿⠙⢟⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⠏⠙⠍⠉⠉⠉⠙⠽⠿⣿⣿⣿⢸⣿⠀⣿⠿⠛⠿⣿⣿⣿⣿⡇⢸⠀⡿⢋⣥⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢸⡇⠜⢊⡤⡂⠕⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⠸⣿⣿⣿⣷⣦⢀⠀⢴⣶⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣠⣤⡄⠀⠀⠀⠀⠀⠀⣤⠀⣈⡁⢠⣿⠀⡏⣴⢿⣧⢲⡙⣿⣿⠃⢸⠀⣶⣦⣙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⣾⣿⣿⠕⠋⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⢻⣿⣿⣿⣿⡗⣷⣌⣿⣷⠲⣀⣀⡠⢀⣦⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⠓⠤⠤⠤⠄⣠⣃⣼⠟⢡⣦⠁⠀⠁⣿⣼⣿⡌⣷⠸⡿⢠⢸⢠⣿⣿⣿⢀⣿⣿⣿⣿⣿⣿⣿⣿⣃⣼⡿⠛⠁⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠘⣿⣿⡟⣿⣇⣿⣿⣿⣿⣧⣤⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣾⣿⣿⡟⢸⣸⣿⡶⠀⡆⣿⣿⣿⣇⢻⣧⠃⡆⠈⢸⣿⣿⢏⣼⣿⣿⣿⣿⣿⣿⠟⣹⡿⠋⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⢹⣿⣧⣿⣿⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⡇⢰⡇⣿⣿⣿⣿⡘⣿⣆⠃⢀⠿⠛⠱⢾⣿⣿⣿⣿⡿⢛⣡⡾⠋⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠀⠀⢻⣿⢻⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣇⢸⣧⠸⣿⣿⣿⣧⢻⣿⡆⢼⡾⠉⠉⠀⢢⣬⣥⣴⡶⠟⠋⢀⡀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠈⣿⠸⣿⡇⣿⣿⣿⣿⣿⣿⣿⣷⣙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⡄⣿⣿⣿⣿⢸⠏⣼⣿⣿⣿⣿⡎⣿⣿⡌⠃⠀⠀⠀⠘⠛⠋⠉⡠⠄⢂⡁⠄⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⢻⣿⡸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣋⡌⣰⣿⣿⣿⣿⠈⣼⣿⣿⣿⣿⡟⣼⣿⣿⡷⠈⠒⠒⣀⡤⠖⢊⡡⣴⣮⣥⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢻⣧⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣴⣿⣿⣿⣿⢃⣾⣿⣿⣿⣿⡿⣸⣿⣿⡿⠁⠀⠠⠓⣡⢴⣮⣷⠿⠿⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⡀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⣛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣼⣿⣿⣿⣿⣏⣾⣿⣿⣿⣿⡿⣱⣿⣿⡿⣡⣿⠀⢰⣹⣿⡿⠿⠊⠉⠉⠉⠁⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣫⣼⣿⣿⣿⣿⡟⣼⣿⣿⣿⣿⣿⢣⣿⣿⡟⣱⣿⣿⠀⡮⢊⣡⣴⣶⣿⣷⣖⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣫⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢃⣿⣿⡟⣴⣿⣿⠃⣠⣴⣿⣿⣿⣿⣿⣿⣿⣷⡱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣬⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣾⣿⡟⣼⣿⣿⢃⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣇⣿⣿⣮⡛⢿⣿⣿⣿⣿⣿⡿⣻⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣣⣿⣿⢃⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⢹⣿⣿⣿⣿⣶⣝⡿⠿⠿⣫⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⢻⣿⣿⢋⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⢻⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⢫⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣿⡿⣣⣿⠟⣡⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⡟⣾⣿⣿⢸⣿⣿⣿⣿⣿⣿⢣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⣾⠿⡁⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣸⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⡅⠘⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⢻⣿⣿⣿⡇⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠉⢀⠀⠃⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡿⣾⢸⣿⣿⣷⢹⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⢸⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣧⡇⣏⢿⣿⣿⡆⣿⣿⠟⠉⠀⣿⣿⣿⣿⣿⣿⣿⣿⣛⣛⡿⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⢸⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢹⣿⡿⢿⣿⡌⣿⣿⡷⠈⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠘⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"

          # More :3
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡢⢋⡁⠠⢀⣴⣦⣌⠔⢂⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢋⣴⠃⠀⣡⣿⣿⠟⡠⢊⣥⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣡⣿⠃⠀⣼⣿⡿⠃⢀⣴⣿⣿⣿⣿⠂⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡏⠀⣸⣿⣿⠃⣴⣿⣿⣿⡿⡻⢁⣾⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠟⣿⠁⢰⣿⣿⡇⣼⣿⡿⠋⠋⠀⣴⣿⣿⣿⣿⡦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢸⡏⠀⣼⣿⣿⠠⠟⠉⢀⣀⡀⠀⢻⣿⣿⣿⣿⣿⡇⣀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢃⣿⡇⠄⣿⣿⡿⢠⣴⣾⣿⣿⣿⣦⣴⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢿⣥⠀⣿⣿⣇⢸⣿⡿⠛⠛⠉⠹⣿⣿⣿⣿⣿⣿⠋⠈⠉⠙⢻⣯⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠿⢍⠉⢛⢛⠛⠛⠓⠒⠂⣿⣿⢿⢸⣿⣷⣤⣤⣴⣶⣿⣿⡿⠛⠿⣿⣷⣶⣦⣤⣼⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⠓⠧⡀⠀⠀⠀⠛⣿⡌⢎⣿⣿⣿⣿⣿⣿⣿⣿⣷⣀⣠⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣮⣕⣀⠀⠀⠘⣷⠀⡘⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠻⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⣿⣿⣿⣶⡅⠀⠈⠣⠹⣿⣿⣿⣿⣿⣏⣛⣿⣛⡁⣼⣿⣿⣿⣿⣿⡖⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⣿⣿⣿⣿⣷⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣼⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣟⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣿⠿⢿⣿⣿⣿⣿⣷⠀⠀⠀⠀⣷⡀⣄⠀⠀⠛⠛⠛⠛⠉⣀⣤⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢛⠷⠀⠀⠈⠁⠀⠈⠻⠇⠀⡇⢸⣿⣧⡘⠀⠀⠀⠀⠀⠀⠀⢹⣿⣴⣷⣶⣤⣶⠀⠠⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣏⣰⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⢸⣿⣿⠃⠀⠀⠀⠠⠀⠀⠀⠈⠋⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⣿⣿⣿⣿⣦⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠟⠛⠻⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⠏⠀⠀⠀⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
          # "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠇⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
        ];
      };
    };

    languages = {
      enableFormat = true;
      enableLSP = true;
      enableTreesitter = true;

      # TODO: misc plugins
      # * supermaven
      # harpoon
      # luasnip

      clang.enable = true;
      bash.enable = true;
      html.enable = true;
      haskell.enable = true;
      lua.enable = true;
      markdown = {
        enable = true;
        extensions.render-markdown-nvim.enable = true;
      };
      nix = {
        enable = true;
        format.type = "nixfmt";
        lsp = {
          server = "nixd";
          options = lib.mkIf (dots != null) {
            nixos = {
              expr = "(builtins.getFlake \"${dots}\").nixosConfigurations.desktop.options";
            };
            home-manager = {
              expr = "(builtins.getFlake \"${dots}\").homeConfigurations.desktop.options";
            };
          };
        };
      };
      ocaml.enable = true;
      python.enable = true;
      rust = {
        enable = true;
        crates.enable = true;
      };
      tailwind.enable = true;
      ts = {
        enable = true;
        extensions.ts-error-translator.enable = true;
        # lsp.server = "denols"; # enable for deno?
      };
    };

    lsp = {
      formatOnSave = true;
      # lightbulb.enable = true;
      lspkind.enable = true;
      otter-nvim.enable = true; # provide lsp for embedded languages
      trouble.enable = true;
      # lspSignature?
      # mappings?
      mappings = {
        goToDefinition = "gd";
      };
    };

    autocomplete.nvim-cmp = {
      enable = true;
      mappings = {
        next = "<C-n>";
        previous = "<C-p>";
      };
    };
    autopairs.nvim-autopairs.enable = true;
    binds.whichKey = {
      enable = true;
      register = {
        #TODO: Set <leader>a to not show when the option is available.
        # "<leader>a" = "";
        "<leader>gc" = "+Conflict";
        "<leader>gd" = "+Diff";
        "<leader>gr" = "+Reset";
        "<leader>gs" = "+Stage";
        "<leader>gt" = "+Toggle";
        "<leader>h" = "+Harpoon";
        "<leader>n" = "+Neorg";
        "<leader>o" = "+Oil";
        "<leader>t" = "+Todo";
      };
      # setupOpts = {
      #   preset = "helix";
      # };
    };
    comments.comment-nvim.enable = true;
    git = {
      enable = true;
      git-conflict = {
        mappings = {
          both = "<leader>gcb";
          none = "<leader>gc0";
          ours = "<leader>gco";
          theirs = "<leader>gct";
        };
      };
      gitsigns = {
        mappings = {
          blameLine = "<leader>gl";
          diffProject = "<leader>gdp";
          diffThis = "<leader>gdt";
          previewHunk = "<leader>gp";
          resetBuffer = "<leader>grb";
          resetHunk = "<leader>grh";
          stageBuffer = "<leader>gsb";
          stageHunk = "<leader>gsh";
          undoStageHunk = "<leader>gsu";
          toggleBlame = "<leader>gtb";
          toggleDeleted = "<leader>gtd";
        };
      };
    };
    lazy.enable = true;
    navigation.harpoon = {
      enable = true;
      mappings = {
        markFile = "<leader>ha";
        listMarks = "<leader>hl";
        file1 = "<leader>hn";
        file2 = "<leader>he";
        file3 = "<leader>hi";
        file4 = "<leader>ho";
      };
    };
    notes = {
      neorg = {
        enable = true;
        treesitter.enable = true;
        setupOpts = {
          load."core.defaults" = true;
        };
      };
      todo-comments = {
        enable = true;
        mappings = {
          trouble = "<leader>tr";
          telescope = "<leader>tt";
          quickFix = "<leader>tq";
        };
      };
    };
    projects.project-nvim = {
      enable = true;
      setupOpts = {
        detection_methods = [
          "lsp"
          "pattern"
        ];
        patterns = [
          ">projects/"
          ">playground/"
          "=flake.nix"
          "=.envrc"
        ];
      };
    };
    snippets.luasnip.enable = true;
    statusline.lualine.enable = true;
    tabline.nvimBufferline = {
      enable = true;
      setupOpts.options = {
        numbers = "none";
        show_close_icon = false;
      };
    };
    telescope = {
      enable = true;
      mappings = {
        buffers = "<leader>fb";
        findFiles = "<leader>ff";
        gitBranches = "<leader>gb";
        gitStatus = "<leader>gT";
        liveGrep = "<leader>/";
      };
      setupOpts = {
        defaults = {
          mappings = {
            i."<S-BS>" = lib.generators.mkLuaInline "require('telescope.actions').delete_buffer";
            n."dd" = lib.generators.mkLuaInline "require('telescope.actions').delete_buffer";
          };
        };
      };
    };
    treesitter.autotagHtml = true;
    ui = {
      colorizer.enable = true;
      smartcolumn.enable = true;
    };
    utility = {
      leetcode-nvim = {
        enable = true;
        setupOpts = {
          arg = "leet";
          lang = "rust";
          storage.home = {
            _type = "lua-inline";
            expr = "vim.fn.expand('~/projects/leetcode/')";
          };
        };
      };
      motion.leap.enable = true;
      # preview.markdownPreview.enable
      surround.enable = true;
    };
    visuals.nvim-web-devicons.enable = true;
  };
}
